name: 'Terraform_Deploy GKE to GCP'


# trigger point
on:
  push:
    branches: [ "main" ]
  pull_request:


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4


    - name: Authenticate to GCP
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_JSON }}
      run: |
        echo "$GOOGLE_APPLICATION_CREDENTIALS" > gcp-key.json
        gcloud auth activate-service-account --key-file=gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=us-central1"

   #  Note if you want to apply you uncomment the apply block but if you want to destroy uncomment the destroy block
   #=================================================================================================================
   
    # - name: Terraform Apply
    #   run: terraform apply -auto-approve -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=us-central1"

    - name: Terraform Destroy
      run: terraform destroy -auto-approve -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=us-central1"
  


    - name: Install gke-gcloud-auth-plugin
      run: |
        sudo apt-get update 
        sudo apt-get install apt-transport-https ca-certificates gnupg curl -y
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        sudo apt-get update && sudo apt-get install google-cloud-cli -y
        sudo apt-get install google-cloud-cli-gke-gcloud-auth-plugin -y

        

    - name: Configure kubectl for GKE
      run: |
          gcloud container clusters get-credentials dev-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}


    - name: Deploy CertManager 
      run: |
       kubectl create namespace cert-manager
       kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.16.2/cert-manager.yaml
       kubectl get pod -n cert-manager
       
       kubectl apply -f clusterissuer.yaml

    - name: Install Helm Before Deploying with Helm
      run: |
        curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
        sudo apt-get install apt-transport-https --yes
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
        sudo apt-get update
        sudo apt-get install helm -y


    - name: Deploy Nginx-Controller
      run: |
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        kubectl create namespace ingress-nginx
        helm install ingress-nginx ingress-nginx/ingress-nginx -n ingress-nginx